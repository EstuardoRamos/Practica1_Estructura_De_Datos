/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import com.mycompany.practica1_estructura_de_datos.main.Apuesta;
import com.mycompany.practica1_estructura_de_datos.main.Pasos;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Estuardo Ramos
 */
public class Resultados extends javax.swing.JFrame {

    /**
     * Creates new form Resutalos
     */
    Apuesta apuestas[];
    int puestosCaballos[];
    int pasosVerifica;
    int pasosResultado;
    Pasos pasos;
    public Resultados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCaballos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaJugadores = new javax.swing.JTable();
        reportesBtn = new javax.swing.JButton();
        ordenAlfa = new javax.swing.JButton();
        ordenPuntos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaCaballos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaCaballos);

        tablaJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaJugadores);

        reportesBtn.setText("Reportes");
        reportesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportesBtnActionPerformed(evt);
            }
        });

        ordenAlfa.setText("Ordenar alfabeticamente");
        ordenAlfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenAlfaActionPerformed(evt);
            }
        });

        ordenPuntos.setText("Puntos");
        ordenPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenPuntosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reportesBtn)
                        .addGap(383, 383, 383)
                        .addComponent(ordenAlfa)
                        .addGap(59, 59, 59)
                        .addComponent(ordenPuntos)
                        .addContainerGap(103, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportesBtn)
                    .addComponent(ordenAlfa)
                    .addComponent(ordenPuntos))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenAlfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenAlfaActionPerformed
        ordenarAlfa();
    }//GEN-LAST:event_ordenAlfaActionPerformed

    private void ordenPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenPuntosActionPerformed
        ordenarPorPuntos();
    }//GEN-LAST:event_ordenPuntosActionPerformed

    private void reportesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportesBtnActionPerformed
        Reporte repote = new Reporte();
        repote.recibirPasos(pasos);
        repote.setVisible(true);
    }//GEN-LAST:event_reportesBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void recibirApuestas(Apuesta[] apuesta1, int[] caballos, Pasos pasos){
        apuestas=apuesta1;
        puestosCaballos=caballos;
        this.pasos=pasos;
        llenarApuestas(apuestas);
        tablaCaballos(caballos);
    }
    
    public void llenarApuestas(Apuesta[] apuestas){
        DefaultTableModel model1 = new DefaultTableModel();
        //model.addColumn("NOmbre");
        
        model1.addColumn("Nombre ");
        model1.addColumn("Puntos ");
        model1.addColumn("Monto ");
        model1.setRowCount(apuestas.length);
        
        
        for (int i = 0; i < apuestas.length; i++) {
            if (apuestas[i].isValido()) {
                model1.setValueAt(apuestas[i].getNombre(), i, 0);
                model1.setValueAt(apuestas[i].getPuntos(), i, 1);
                model1.setValueAt(apuestas[i].getDineroApuesta(), i, 2);
            }
        }
        tablaJugadores.setModel(model1);
    }
    
    public void tablaCaballos(int[] caballos){
        DefaultTableModel model1 = new DefaultTableModel();
        //model.addColumn("NOmbre");
        
        model1.addColumn("Puestos");
        model1.addColumn("Caballos ");
        
        model1.setRowCount(caballos.length);
        
        for (int j = 0; j < caballos.length; j++) {
            model1.setValueAt("Puesto "+j+1, j, 0);
                model1.setValueAt("Caballo "+caballos[j], j, 1);
                
        }
        tablaCaballos.setModel(model1);
    }
    
    public void ordenarAlfa(){
        for (int i = 0; i < apuestas.length; i++) {
            for (int j = 0; j < apuestas.length; j++) {
                if (apuestas[i].getNombre().compareTo(apuestas[j].getNombre())<0) {
                    Apuesta auxi=apuestas[i];
                    apuestas[i]=apuestas[j];
                    apuestas[j]=auxi;
                }
                
            }
        }
        llenarApuestas(apuestas);
        
    }
    
    public void ordenarPorPuntos(){
        for (int i = 0; i < apuestas.length; i++) {
            for (int j = 0; j < apuestas.length; j++) {
                if (apuestas[i].getPuntos()>apuestas[j].getPuntos()) {
                    Apuesta auxi=apuestas[i];
                    apuestas[i]=apuestas[j];
                    apuestas[j]=auxi;
                }
                
            }
        }
        llenarApuestas(apuestas);
        
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton ordenAlfa;
    private javax.swing.JButton ordenPuntos;
    private javax.swing.JButton reportesBtn;
    private javax.swing.JTable tablaCaballos;
    private javax.swing.JTable tablaJugadores;
    // End of variables declaration//GEN-END:variables
}
